version: '3.8'
name: otus_social
services:
  database_01:
    image: postgres:14-alpine
    container_name: social_db_postgres_01
    ports:
      - "5443:5432"
    environment:
      - POSTGRES_DB=social
      - POSTGRES_NAME=postgres
      - POSTGRES_PASSWORD=password
#  master:
#    container_name: "${COMPOSE_PROJECT_NAME:-citus}_master"
#    image: "citusdata/citus:12.1.3"
#    ports: [ "${COORDINATOR_EXTERNAL_PORT:-5443}:5432" ]
#    labels: [ "com.citusdata.role=Master" ]
#    environment: &AUTH
#      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
#      POSTGRES_DB: "social"
#      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-password}"
#      PGUSER: "${POSTGRES_USER:-postgres}"
#      PGPASSWORD: "${POSTGRES_PASSWORD:-password}"
#      POSTGRES_HOST_AUTH_METHOD: "${POSTGRES_HOST_AUTH_METHOD:-trust}"
#  worker:
#    image: "citusdata/citus:12.1.3"
#    labels: ["com.citusdata.role=Worker"]
#    depends_on: [manager]
#    environment: *AUTH
#    command: "/wait-for-manager.sh"
#    volumes:
#      - healthcheck-volume:/healthcheck
#  manager:
#    container_name: "${COMPOSE_PROJECT_NAME:-citus}_manager"
#    image: "citusdata/membership-manager:0.3.0"
#    volumes:
#      - "${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock"
#      - healthcheck-volume:/healthcheck
#    depends_on: [master]
#    environment: *AUTH
#  database_02:
#    image: postgres:14-alpine
#    container_name: social_db_postgres_02
#    volumes:
#      - db-data-02:/var/lib/postgresql/data
#    ports:
#      - "5444:5432"
#    environment:
#      - POSTGRES_DB=social
#      - POSTGRES_NAME=postgres
#      - POSTGRES_PASSWORD=password

  social:
    image: social:latest
    restart: on-failure
    build:
      context: ./social
      dockerfile: Dockerfile
    depends_on:
#      - master
#      - worker
#      - manager
      - redis-server
    links:
      - redis-server
    ports:
      - "8080:8080"

    environment:
      - DATABASE_HOST_01=database_01
      - DATABASE_HOST_PORT_01=5432
      - DATABASE_HOST_02=database_02
      - REDIS_HOST=redis

  dialogs:
    image: dialogs:latest
    restart: on-failure
    build:
      context: ./dialogs
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
  redis-server:
      image: redis:latest
      container_name: redis
      restart: always
      hostname: redis
      ports:
        - "6379:6379"
      environment:
        - REDIS_PASSWORD=password
        - REDIS_PORT=6379

  rabbitmq:
    image: rabbitmq:3.13.1-management
    ports:
      - "15672:15672"
      - "61613:61613"
      - "5672:5672"
  tarantool:
    container_name: tarantool
    image: tarantool/tarantool
    command: tarantool /opt/tarantool/app.lua
    environment:
      - TARANTOOL_USER_NAME=tarantool
      - TARANTOOL_USER_PASSWORD=tarantool
    ports:
      - "3301:3301"
    volumes:
      - ./lua/dialog.lua:/opt/tarantool/app.lua
  keycloak:
    image: quay.io/keycloak/keycloak
    command: ["start-dev"]
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8080:8080"

#    networks:
#      backend:
#          - aliases:
#              - "keycloak"
#  redis_test:
#      image: redis:latest
#      restart: always
#      ports:
#        - "6380:6379"
#      environment:
#        - REDIS_PASSWORD=password
#        - REDIS_PORT=6379
#        - REDIS_DATABASE=16

#  database_test:
#    image: postgres:14-alpine
#    container_name: social_db_test_postgres
#    ports:
#      - "5444:5432"
#    environment:
#      - POSTGRES_DB=social_test
#      - POSTGRES_NAME=postgres
#      - POSTGRES_PASSWORD=password
volumes:
  db-data-02:
  db-data-03:
  healthcheck-volume:

networks:
  elastic:



